rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Players collection
    match /players/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
    }

    // Player discs collection
    match /playerDiscs/{discId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        get(/databases/$(database)/documents/playerDiscs/$(discId)).data.userId == request.auth.uid;
    }

    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
      allow create: if isAuthenticated() && (
        request.auth.uid in request.resource.data.participants
      );
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
      allow delete: if isAuthenticated() && (
        request.auth.uid in resource.data.participants
      );
    }

    // Store inventory
    match /storeInventory/{discId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        exists(/databases/$(database)/documents/stores/$(request.auth.uid));
    }

    // Build QR codes collection
    match /buildQrCodes/{code} {
      allow read: if isAuthenticated();
    }

    // Discs collection (for disc data/suggestions)
    match /discs/{disc} {
      allow read: if isAuthenticated();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      
      allow create: if isAuthenticated() && 
        request.resource.data.type == 'DISC_FOUND' && 
        exists(/databases/$(database)/documents/players/$(request.resource.data.userId));
        
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
        
      allow delete: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
  }
} 